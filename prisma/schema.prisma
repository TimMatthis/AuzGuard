generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Policy {
  policy_id           String   @id
  version             String
  title               String
  jurisdiction        String
  evaluation_strategy Json
  rules               Json
  created_at          DateTime @default(now())
  updated_at          DateTime @updatedAt
  published_by        String?

  @@map("policies")
}

model AuditLog {
  id               String   @id @default(uuid())
  timestamp        DateTime @default(now())
  org_id           String?
  rule_id          String
  effect           String
  actor_id         String?
  payload_hash     String   @db.Char(64)
  prev_hash        String   @db.Char(64)
  merkle_leaf      String?  @db.Char(64)
  redacted_payload Json?

  @@map("audit_log")
}

model ModelPool {
  pool_id      String        @id
  region       String
  description  String
  tags         Json
  targets      Json
  health       Json
  routeTargets RouteTarget[]

  @@map("model_pools")
}

model RouteTarget {
  id        String    @id @default(uuid())
  pool_id   String
  provider  String
  endpoint  String
  weight    Int
  region    String
  is_active Boolean   @default(true)
  profile   Json?
  modelPool ModelPool @relation(fields: [pool_id], references: [pool_id], onDelete: Cascade)

  @@map("route_targets")
}

model ModelInvocation {
  id                 String   @id @default(uuid())
  created_at         DateTime @default(now())
  policy_id          String
  rule_id            String?
  decision           String
  model_pool         String?
  provider           String
  model_identifier   String
  latency_ms         Int
  prompt_tokens      Int?
  completion_tokens  Int?
  total_tokens       Int?
  estimated_cost_aud Float?
  audit_log_id       String?
  org_id             String?
  request_payload    Json
  response_payload   Json?
  error_message      String?

  @@index([created_at], map: "idx_model_invocation_created_at")
  @@index([policy_id], map: "idx_model_invocation_policy")
  @@map("model_invocations")
}
